@font-face {
  font-display: swap;
  font-family: "JetBrains Mono";
  font-style: normal;
  font-weight: 700;
  src: url("../assets/fonts/JetBrainsMono-VariableFont_wght.ttf") format("ttf");
}

:root {
  --clr-neutral-200: hsl(252, 11%, 91%);
  --clr-neutral-300: hsl(251, 9%, 53%);
  --clr-neutral-400: hsl(248, 10%, 15%);
  --clr-neutral-700: hsl(248, 15%, 11%);

  --clr-primary-green: hsl(127, 100%, 82%);
  --clr-primary-red: hsl(0, 91%, 63%);
  --clr-primary-orange: hsl(13, 95%, 66%);
  --clr-primary-yellow: hsl(42, 91%, 68%);

  --ff-base: "JetBrains Mono", monospace;

  --fs-400: calc(18 / 16 * 1rem);
  --fs-500: calc(24 / 16 * 1rem);
  --fs-600: calc(32 / 16 * 1rem);

  --fs-heading: var(--fs-500);
}

@media (width > 30em) {
  :root {
    --fs-heading: var(--fs-600);
  }
}

/* reset */
*,
*::before,
*::after {
  box-sizing: border-box;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4 {
  line-height: 1.1;
}

body,
h1,
h2,
h3,
p,
dl,
dd,
figure,
blockquote {
  margin: 0;
}

ul[role="list"],
ol[role="list"] {
  list-style: none;
  padding: 0;
}

body {
  min-height: 100vh;
  line-height: 1.5;
}

input,
button,
textarea,
select {
  font: inherit;
}

img,
picture {
  max-inline-size: 100%;
  display: block;
}

/* general stylings */
body {
  font-family: var(--ff-base);
  font-size: var(--fs-400);
  color: var(--clr-neutral-200);
  background: var(--clr-neutral-700);
  align-content: center;
  padding: 1rem;
}

/* typography */
.page-title {
  font-size: var(--fs-400);
  text-align: center;
  color: var(--clr-neutral-300);
}

.text-light {
  opacity: 0.25;
}

.password {
  font-size: var(--fs-heading);
}

/* utilities */
.flow-content > * + * {
  margin-block-start: var(--flow-spacer, 1rem);
}

.flex-center {
  display: flex;
  gap: var(--flex-gap, 1rem);
  align-items: center;
}

.visually-hidden:not(:focus):not(:active) {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0); /* Legacy property for Internet Explorer */
  clip-path: inset(50%);
  white-space: nowrap;
}

.bg-dark {
  background: var(--clr-neutral-400);
}

.hidden {
  display: none;
}

/* layout */
.container {
  max-width: 34rem;
  margin-inline: auto;
}

.wrapper {
  padding: 1rem;
}

@media (width > 30em) {
  .wrapper {
    padding: 2rem;
  }
}

.result-container {
  justify-content: space-between;
  flex-wrap: wrap;
}

/* components */
.copy-button {
  background: transparent;
  border: 0;
  color: var(--clr-primary-green);
  text-transform: uppercase;
  cursor: pointer;
  transition: transform 200ms ease-in-out;
}

.copy-button:active {
  transform: scale(0.8);
}

.copy-button:hover svg path,
.copy-button:focus-visible {
  fill: var(--clr-neutral-200);
}

.button {
  width: 100%;
  text-transform: uppercase;
  padding: 1em;
  background: var(--clr-primary-green);
  border: 2px solid transparent;
  cursor: pointer;
  transition: background 200ms ease-in-out, color 200ms ease-in-out;
}

@media (width >30em) {
  .button {
    --flow-spacer: 2rem;
  }
}

.button svg path {
  transition: fill 300ms ease-in-out;
}

.button:hover,
.button:focus-visible {
  background: transparent;
  border-color: var(--clr-primary-green);
  color: var(--clr-primary-green);
}

.button:hover svg path,
.button:focus-visible svg path {
  fill: var(--clr-primary-green);
}

input[type="range"] {
  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */
  width: 100%; /* Specific width is required for Firefox. */
  background: transparent; /* Otherwise white in Chrome */
  appearance: none;
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: 28px;
  aspect-ratio: 1;
  background: var(--clr-neutral-200);
  border-radius: 50%;
  border: 2px solid transparent;
  transform: translateY(-10px);
  cursor: pointer;
}

input[type="range"]::-webkit-slider-thumb:hover,
input[type="range"]::-webkit-slider-thumb:focus-visible {
  background: var(--clr-neutral-700);
  border: 2px solid var(--clr-primary-green);
}

input[type="range"]::-moz-range-thumb {
  width: 28px;
  aspect-ratio: 1;
  background: var(--clr-neutral-200);
  border-radius: 50%;
  cursor: pointer;
}

input[type="range"]::-moz-range-thumb:hover,
input[type="range"]::-moz-range-thumb:focus-visible {
  background: var(--clr-neutral-700);
  border: 2px solid var(--clr-primary-green);
}

input[type="range"]::-ms-thumb {
  width: 28px;
  aspect-ratio: 1;
  background: var(--clr-neutral-200);
  border-radius: 50%;
  cursor: pointer;
}

input[type="range"]::-ms-thumb:hover,
input[type="range"]::-ms-thumb:focus-visible {
  background: var(--clr-neutral-700);
  border: 2px solid var(--clr-primary-green);
}

input[type="range"]::-webkit-slider-runnable-track {
  width: 100%;
  height: 8px;
  cursor: pointer;
  background: linear-gradient(to right, var(--clr-primary-green) var(--progress), var(--clr-neutral-700) var(--progress));
}

input[type="range"]::-moz-range-track {
  width: 100%;
  height: 8px;
  cursor: pointer;
  background: linear-gradient(to right, var(--clr-primary-green) var(--progress), var(--clr-neutral-700) var(--progress));
}

input[type="range"]::-ms-track {
  width: 100%;
  cursor: pointer;

  /* Hides the slider so custom styles can be added */
  background: transparent;
  border-color: transparent;
  color: transparent;

  height: 8px;
  background: linear-gradient(to right, var(--clr-primary-green) var(--progress), var(--clr-neutral-700) var(--progress));
}

input[type="checkbox"] {
  -webkit-appearance: none; /* Add if not using autoprefixer */
  appearance: none;
  margin: 0; /* Not removed via appearance */

  width: 1.25rem;
  aspect-ratio: 1;
  cursor: pointer;
  position: relative;
  background: transparent;
  border: 2px solid var(--clr-neutral-200);
  transition: all 200ms ease-in-out;
}

input[type="checkbox"]:checked {
  background: var(--clr-primary-green);
  border: 2px solid var(--clr-primary-green);
}

input[type="checkbox"]::before {
  content: url(./assets/images/icon-check.svg);
  position: absolute;
  transform: translate(1px, -5px);
  max-height: 100%;
  scale: 0;
  transition: scale 200ms ease-in-out;
}

input[type="checkbox"]:checked::before {
  scale: 1;
}

/* form */
.form-group.length {
  display: grid;
  gap: 1rem;
  grid-template-columns: 1fr 0.25fr;
  grid-auto-flow: dense;
  align-items: center;
}

.form-group input[type="range"] {
  --progress: 40%;
  grid-column: 1 / -1;
}

.form-group .length-count {
  justify-self: end;
  font-size: var(--fs-heading);
  color: var(--clr-primary-green);
}

.form-group.checkboxes {
  --flow-spacer: 2rem;
  border: 0;
  padding: 0;
}

.form-group.checkboxes label {
  display: block;
  display: grid;
  grid-template-columns: 1em auto;
  gap: clamp(1em, 3vw, 1.25em);
  align-items: center;
  margin-block-start: 1rem;
}

.password-strength {
  --flow-spacer: 2rem;
  --flex-gap: 0.5rem;
  flex-wrap: wrap;
  padding: 1rem;
  background: var(--clr-neutral-700);
}

@media (width > 30em) {
  .password-strength {
    padding: 1.5rem;
  }
}

.password-strength .text {
  margin-inline-start: auto;
  margin-inline-end: var(--flex-gap);
  text-transform: uppercase;
}

.password-strength .bar {
  --bar-color: var(--clr-neutral-200);
  border: 2px solid var(--bar-color);
  height: 1.75em;
  width: 0.6em;
}

.password-strength .too-weak {
  --bar-color: var(--clr-primary-red);
  background: var(--bar-color);
}

.password-strength:has(.weak) .bar {
  --bar-color: var(--clr-primary-orange);
  background: var(--bar-color);
}

.password-strength .weak ~ .bar {
  --bar-color: var(--clr-neutral-200);
  background: transparent;
}

.password-strength:has(.medium) .bar {
  --bar-color: var(--clr-primary-yellow);
  background: var(--bar-color);
}

.password-strength .medium ~ .bar {
  --bar-color: var(--clr-neutral-200);
  background: transparent;
}

.password-strength:has(.strong) .bar {
  --bar-color: var(--clr-primary-green);
  background: var(--bar-color);
}
